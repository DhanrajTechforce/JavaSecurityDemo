<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<http auto-config="false" use-expressions="true">
		<intercept-url pattern="/login**" access="permitAll"/>
		<intercept-url pattern="/**" access="authenticated" />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login
		    login-page="/login"
		    default-target-url="/"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password" />
			<logout logout-url="/j_spring_security_logout" logout-success-url="/login?logout"/>
		<csrf/>
	</http>
<context:component-scan base-package="com.spring.security"></context:component-scan>
	<!-- Select users and user_roles from database -->
	<!-- <authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
	  </authentication-provider>
	</authentication-manager> -->
	<authentication-manager>
		<authentication-provider  user-service-ref="userDetailSeviceImpl"/>
	</authentication-manager>
	
	
	
</beans:beans>